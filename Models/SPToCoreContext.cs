
///
/// generated by SPToCore on 07/06/2022 16:43:09
///






using System;
using System.Data;
using System.Collections.Generic;
using Microsoft.Data.SqlClient;
using System.Threading.Tasks;
using Microsoft.EntityFrameworkCore;

namespace USAIDICANBLAZOR.Models
{
    public partial class SPToCoreContext : USAID_ICANContext
    {

        private DbSet<spOutofSchoolResult> spOutofSchool { get; set; }

        private DbSet<spPerformanceIndicatorsReportResult> spPerformanceIndicatorsReport { get; set; }


        public SPToCoreContext()
        {
        }

        public SPToCoreContext(DbContextOptions<USAID_ICANContext> options)
            : base(options)
        {
        }               

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {            
            // No key            

            modelBuilder.Entity<spOutofSchoolResult>().HasNoKey();

            modelBuilder.Entity<spPerformanceIndicatorsReportResult>().HasNoKey();

            //Thanks Valecass!!!
            base.OnModelCreating(modelBuilder);
        }


        public void spErrorLogInsert(string Source,string Module,int? ErrorNumber,string Description)
        {



                // Parameters

                SqlParameter p_Source = new SqlParameter("@Source", Source ?? (object)DBNull.Value);
                p_Source.Direction = ParameterDirection.Input;
                p_Source.DbType = DbType.String;
                p_Source.Size = 255;


                SqlParameter p_Module = new SqlParameter("@Module", Module ?? (object)DBNull.Value);
                p_Module.Direction = ParameterDirection.Input;
                p_Module.DbType = DbType.String;
                p_Module.Size = 255;


                SqlParameter p_ErrorNumber = new SqlParameter("@ErrorNumber", ErrorNumber ?? (object)DBNull.Value);
                p_ErrorNumber.Direction = ParameterDirection.Input;
                p_ErrorNumber.DbType = DbType.Int32;
                p_ErrorNumber.Size = 4;


                SqlParameter p_Description = new SqlParameter("@Description", Description ?? (object)DBNull.Value);
                p_Description.Direction = ParameterDirection.Input;
                p_Description.DbType = DbType.String;
                p_Description.Size = 5000;



                // Processing 
                string sqlQuery = $@"EXEC [dbo].[spErrorLogInsert] @Source, @Module, @ErrorNumber, @Description";

                //Execution
                this.Database.ExecuteSqlRaw(sqlQuery , p_Source , p_Module , p_ErrorNumber , p_Description );



            //Return

        }


        public async Task<List<spOutofSchoolResult>> spOutofSchoolAsync(string Month,string Year)
        {

            //Initialize Result 
            List<spOutofSchoolResult> lst = new List<spOutofSchoolResult>();



                // Parameters

                SqlParameter p_Month = new SqlParameter("@Month", Month ?? (object)DBNull.Value);
                p_Month.Direction = ParameterDirection.Input;
                p_Month.DbType = DbType.String;
                p_Month.Size = 100;


                SqlParameter p_Year = new SqlParameter("@Year", Year ?? (object)DBNull.Value);
                p_Year.Direction = ParameterDirection.Input;
                p_Year.DbType = DbType.String;
                p_Year.Size = 100;



                // Processing 
                string sqlQuery = $@"EXEC [dbo].[spOutofSchool] @Month, @Year";

                
                //Output Data
                lst = await this.spOutofSchool.FromSqlRaw(sqlQuery , p_Month , p_Year ).ToListAsync();



            //Return

            return lst;

        }


        public async Task<List<spPerformanceIndicatorsReportResult>> spPerformanceIndicatorsReportAsync(string RegionId,string DistrictId,string FinancialYearId,string IndicatorId,string QuarterId)
        {

            //Initialize Result 
            List<spPerformanceIndicatorsReportResult> lst = new List<spPerformanceIndicatorsReportResult>();



                // Parameters

                SqlParameter p_RegionId = new SqlParameter("@RegionId", RegionId ?? (object)DBNull.Value);
                p_RegionId.Direction = ParameterDirection.Input;
                p_RegionId.DbType = DbType.String;
                p_RegionId.Size = 100;


                SqlParameter p_DistrictId = new SqlParameter("@DistrictId", DistrictId ?? (object)DBNull.Value);
                p_DistrictId.Direction = ParameterDirection.Input;
                p_DistrictId.DbType = DbType.String;
                p_DistrictId.Size = 100;


                SqlParameter p_FinancialYearId = new SqlParameter("@FinancialYearId", FinancialYearId ?? (object)DBNull.Value);
                p_FinancialYearId.Direction = ParameterDirection.Input;
                p_FinancialYearId.DbType = DbType.String;
                p_FinancialYearId.Size = 100;


                SqlParameter p_IndicatorId = new SqlParameter("@IndicatorId", IndicatorId ?? (object)DBNull.Value);
                p_IndicatorId.Direction = ParameterDirection.Input;
                p_IndicatorId.DbType = DbType.String;
                p_IndicatorId.Size = 100;


                SqlParameter p_QuarterId = new SqlParameter("@QuarterId", QuarterId ?? (object)DBNull.Value);
                p_QuarterId.Direction = ParameterDirection.Input;
                p_QuarterId.DbType = DbType.String;
                p_QuarterId.Size = 100;



                // Processing 
                string sqlQuery = $@"EXEC [dbo].[spPerformanceIndicatorsReport] @RegionId, @DistrictId, @FinancialYearId, @IndicatorId, @QuarterId";

                
                //Output Data
                lst = await this.spPerformanceIndicatorsReport.FromSqlRaw(sqlQuery , p_RegionId , p_DistrictId , p_FinancialYearId , p_IndicatorId , p_QuarterId ).ToListAsync();



            //Return

            return lst;

        }




    }

    public class spOutofSchoolResult
    {

            public string location_groupid { get; set; }

            public double? Numbers_maleY { get; set; }

            public double? MaleYYear { get; set; }

            public double? Numbers_femaleY { get; set; }

            public double? FemaleYYear { get; set; }

            public string month { get; set; }

            public string year { get; set; }

    }


    public class spPerformanceIndicatorsReportResult
    {

            public string Region { get; set; }

            public string District { get; set; }

            public int? Target { get; set; }

            public int? Actual { get; set; }

            public int? Year { get; set; }

            public string ack2 { get; set; }

            public string meta_instanceID { get; set; }

            public string _uuid { get; set; }

            public DateTime? _submission_time { get; set; }

            public double? _index { get; set; }

            public string _parent_table_name { get; set; }

            public double? _parent_index { get; set; }

            public string _tags { get; set; }

            public string _notes { get; set; }

            public string _version { get; set; }

            public string _duration { get; set; }

            public string _submitted_by { get; set; }

            public double? _xform_id { get; set; }

            public DateTime? LastUpdatedAt { get; set; }

            public string DistrictDescription { get; set; }

            public int DistrictId { get; set; }

            public string RegionDescription { get; set; }

            public int RegionId { get; set; }

            public int? FinancialYearId { get; set; }

            public string FinancialYearDesc { get; set; }

            public int? QuarterId { get; set; }

            public string QuarterDescription { get; set; }

            public int? IndicatorId { get; set; }

            public int TargetId { get; set; }

            public string IndicatorDescription { get; set; }

            public double Quarter1 { get; set; }

            public double Quarter2 { get; set; }

            public double Quarter3 { get; set; }

            public double Quarter4 { get; set; }

            public double PercentageAchievement { get; set; }

    }


}